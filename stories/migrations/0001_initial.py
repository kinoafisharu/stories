# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-30 18:35
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('name', models.TextField()),
                ('text', models.TextField()),
                ('date', models.DateTimeField()),
                ('user', models.IntegerField()),
                ('flag_del', models.IntegerField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'articles',
            },
        ),
        migrations.CreateModel(
            name='FlamplayerArtist',
            fields=[
                ('id_artist', models.AutoField(primary_key=True, serialize=False)),
                ('name_artist', models.CharField(max_length=40)),
                ('email_artist', models.CharField(blank=True, max_length=100, null=True)),
                ('website_artist', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'flamplayer_artists',
            },
        ),
        migrations.CreateModel(
            name='FlamplayerMusic',
            fields=[
                ('id_music', models.AutoField(primary_key=True, serialize=False)),
                ('fk_artist', models.IntegerField()),
                ('title_music', models.CharField(max_length=200)),
                ('filename_music', models.CharField(max_length=255)),
                ('playlist_music', models.CharField(max_length=16)),
                ('date_music', models.DateTimeField()),
                ('active_music', models.CharField(max_length=8)),
            ],
            options={
                'db_table': 'flamplayer_musics',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'keywords',
            },
        ),
        migrations.CreateModel(
            name='Qwest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(blank=True, null=True)),
                ('user', models.IntegerField()),
                ('status', models.IntegerField(blank=True, null=True)),
                ('branch', models.IntegerField()),
                ('top', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('flag_del', models.IntegerField()),
            ],
            options={
                'db_table': 'qwests',
            },
        ),
        migrations.CreateModel(
            name='StrArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('name', models.TextField()),
                ('text', models.TextField()),
                ('date', models.DateTimeField()),
                ('user', models.IntegerField()),
                ('flag_del', models.IntegerField()),
                ('count', models.IntegerField()),
                ('view', models.IntegerField()),
                ('plus', models.IntegerField()),
                ('minus', models.IntegerField()),
                ('money', models.IntegerField()),
                ('flags', models.CharField(max_length=6)),
                ('date_r', models.DateTimeField()),
            ],
            options={
                'db_table': 'str_articles',
            },
        ),
        migrations.CreateModel(
            name='StrComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
            options={
                'db_table': 'str_comments',
            },
        ),
        migrations.CreateModel(
            name='StrErrorLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('text', models.TextField()),
                ('arg', models.CharField(max_length=511)),
                ('user', models.IntegerField()),
                ('ip', models.CharField(blank=True, max_length=32, null=True)),
            ],
            options={
                'db_table': 'str_error_log',
            },
        ),
        migrations.CreateModel(
            name='StrKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'str_keywords',
            },
        ),
        migrations.CreateModel(
            name='StrMoneyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('user_from', models.IntegerField()),
                ('user_to', models.IntegerField()),
                ('sum', models.IntegerField()),
                ('point', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('comment', models.IntegerField()),
                ('story', models.IntegerField()),
            ],
            options={
                'db_table': 'str_money_log',
            },
        ),
        migrations.CreateModel(
            name='StrQwest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(blank=True, null=True)),
                ('user', models.IntegerField()),
                ('status', models.IntegerField(blank=True, null=True)),
                ('branch', models.IntegerField()),
                ('top', models.IntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('parent', models.IntegerField(blank=True, null=True)),
                ('date', models.DateTimeField()),
                ('flag_del', models.IntegerField()),
            ],
            options={
                'db_table': 'str_qwests',
            },
        ),
        migrations.CreateModel(
            name='StrResobj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_story', models.IntegerField()),
                ('id_user', models.IntegerField()),
                ('type', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('expans', models.CharField(max_length=5)),
                ('comment', models.CharField(max_length=255)),
                ('date_r', models.DateTimeField()),
                ('cluster', models.IntegerField()),
            ],
            options={
                'db_table': 'str_resobj',
            },
        ),
        migrations.CreateModel(
            name='StrText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('user', models.IntegerField()),
                ('name', models.TextField()),
                ('text', models.TextField()),
                ('flag_del', models.IntegerField()),
            ],
            options={
                'db_table': 'str_texts',
            },
        ),
        migrations.CreateModel(
            name='StrTooltip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=511)),
                ('text', models.CharField(max_length=1023)),
                ('flag_del', models.IntegerField()),
                ('max_show', models.IntegerField()),
            ],
            options={
                'db_table': 'str_tooltips',
            },
        ),
        migrations.CreateModel(
            name='StrUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nick', models.CharField(max_length=63)),
                ('date_reg', models.DateTimeField()),
                ('first', models.CharField(max_length=63)),
                ('last', models.CharField(max_length=63)),
                ('pass_field', models.CharField(blank=True, db_column='pass', max_length=80, null=True)),
                ('session', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField()),
                ('status', models.CharField(max_length=4)),
                ('flag_del', models.IntegerField()),
                ('wait', models.IntegerField()),
                ('last_g', models.CharField(max_length=64)),
                ('phone', models.CharField(max_length=63)),
                ('favorit', models.IntegerField()),
                ('money', models.IntegerField()),
            ],
            options={
                'db_table': 'str_users',
            },
        ),
        migrations.CreateModel(
            name='StrVisitorsWay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sess_id', models.IntegerField(blank=True, null=True)),
                ('referer', models.CharField(max_length=127)),
                ('ip', models.CharField(max_length=12)),
                ('user_id', models.IntegerField()),
                ('time', models.DateTimeField()),
                ('gg_id', models.IntegerField()),
                ('article_id', models.IntegerField()),
            ],
            options={
                'db_table': 'str_visitors_way',
            },
        ),
        migrations.CreateModel(
            name='WkpComment',
            fields=[
                ('comment_id', models.BigAutoField(db_column='comment_ID', primary_key=True, serialize=False)),
                ('comment_post_id', models.BigIntegerField(db_column='comment_post_ID')),
                ('comment_author', models.TextField()),
                ('comment_author_email', models.CharField(max_length=100)),
                ('comment_author_url', models.CharField(max_length=200)),
                ('comment_author_ip', models.CharField(db_column='comment_author_IP', max_length=100)),
                ('comment_date', models.DateTimeField()),
                ('comment_date_gmt', models.DateTimeField()),
                ('comment_content', models.TextField()),
                ('comment_karma', models.IntegerField()),
                ('comment_approved', models.CharField(max_length=20)),
                ('comment_agent', models.CharField(max_length=255)),
                ('comment_type', models.CharField(max_length=20)),
                ('comment_parent', models.BigIntegerField()),
                ('user_id', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wkp_comments',
            },
        ),
        migrations.CreateModel(
            name='WkpCommentmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('comment_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkp_commentmeta',
            },
        ),
        migrations.CreateModel(
            name='WkpLink',
            fields=[
                ('link_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('link_url', models.CharField(max_length=255)),
                ('link_name', models.CharField(max_length=255)),
                ('link_image', models.CharField(max_length=255)),
                ('link_target', models.CharField(max_length=25)),
                ('link_description', models.CharField(max_length=255)),
                ('link_visible', models.CharField(max_length=20)),
                ('link_owner', models.BigIntegerField()),
                ('link_rating', models.IntegerField()),
                ('link_updated', models.DateTimeField()),
                ('link_rel', models.CharField(max_length=255)),
                ('link_notes', models.TextField()),
                ('link_rss', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'wkp_links',
            },
        ),
        migrations.CreateModel(
            name='WkpOptions',
            fields=[
                ('option_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('blog_id', models.IntegerField()),
                ('option_name', models.CharField(max_length=64, unique=True)),
                ('option_value', models.TextField()),
                ('autoload', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'wkp_options',
            },
        ),
        migrations.CreateModel(
            name='WkpPost',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('post_author', models.BigIntegerField()),
                ('post_date', models.DateTimeField()),
                ('post_date_gmt', models.DateTimeField()),
                ('post_content', models.TextField()),
                ('post_title', models.TextField()),
                ('post_excerpt', models.TextField()),
                ('post_status', models.CharField(max_length=20)),
                ('comment_status', models.CharField(max_length=20)),
                ('ping_status', models.CharField(max_length=20)),
                ('post_password', models.CharField(max_length=20)),
                ('post_name', models.CharField(max_length=200)),
                ('to_ping', models.TextField()),
                ('pinged', models.TextField()),
                ('post_modified', models.DateTimeField()),
                ('post_modified_gmt', models.DateTimeField()),
                ('post_content_filtered', models.TextField()),
                ('post_parent', models.BigIntegerField()),
                ('guid', models.CharField(max_length=255)),
                ('menu_order', models.IntegerField()),
                ('post_type', models.CharField(max_length=20)),
                ('post_mime_type', models.CharField(max_length=100)),
                ('comment_count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wkp_posts',
            },
        ),
        migrations.CreateModel(
            name='WkpPostmeta',
            fields=[
                ('meta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('post_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkp_postmeta',
            },
        ),
        migrations.CreateModel(
            name='WkpTermRelationship',
            fields=[
                ('object_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('term_taxonomy_id', models.BigIntegerField()),
                ('term_order', models.IntegerField()),
            ],
            options={
                'db_table': 'wkp_term_relationships',
            },
        ),
        migrations.CreateModel(
            name='WkpTerms',
            fields=[
                ('term_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200, unique=True)),
                ('term_group', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wkp_terms',
            },
        ),
        migrations.CreateModel(
            name='WkpTermTaxonomy',
            fields=[
                ('term_taxonomy_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('term_id', models.BigIntegerField()),
                ('taxonomy', models.CharField(max_length=32)),
                ('description', models.TextField()),
                ('parent', models.BigIntegerField()),
                ('count', models.BigIntegerField()),
            ],
            options={
                'db_table': 'wkp_term_taxonomy',
            },
        ),
        migrations.CreateModel(
            name='WkpUser',
            fields=[
                ('id', models.BigAutoField(db_column='ID', primary_key=True, serialize=False)),
                ('user_login', models.CharField(max_length=60)),
                ('user_pass', models.CharField(max_length=64)),
                ('user_nicename', models.CharField(max_length=50)),
                ('user_email', models.CharField(max_length=100)),
                ('user_url', models.CharField(max_length=100)),
                ('user_registered', models.DateTimeField()),
                ('user_activation_key', models.CharField(max_length=60)),
                ('user_status', models.IntegerField()),
                ('display_name', models.CharField(max_length=250)),
            ],
            options={
                'db_table': 'wkp_users',
            },
        ),
        migrations.CreateModel(
            name='WkpUsermeta',
            fields=[
                ('umeta_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.BigIntegerField()),
                ('meta_key', models.CharField(blank=True, max_length=255, null=True)),
                ('meta_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'wkp_usermeta',
            },
        ),
        migrations.AlterUniqueTogether(
            name='wkptermtaxonomy',
            unique_together=set([('term_id', 'taxonomy')]),
        ),
        migrations.AlterUniqueTogether(
            name='wkptermrelationship',
            unique_together=set([('object_id', 'term_taxonomy_id')]),
        ),
    ]
